// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id          Int      @id @default(autoincrement())
  nome        String   @db.VarChar(100)
  email       String   @unique @db.VarChar(150)
  senha       String   @db.Text
  created_at  DateTime @default(now())

  @@map("admins")
}

model Temporada {
  id          Int      @id @default(autoincrement())
  nome        String   @db.VarChar(100)
  ano         Int
  criada_em   DateTime @default(now())
  
  // Relacionamentos
  torneios    Torneio[]
  rankings    Ranking[]
  fotos       Foto[]    // Fotos da temporada

  @@map("temporadas")
}

model Jogador {
  id          Int      @id @default(autoincrement())
  nome        String   @db.VarChar(100)
  email       String?  @unique @db.VarChar(150)
  telefone    String?  @db.VarChar(20)
  apelido     String?  @db.VarChar(50)
  avatar_url  String?  @db.VarChar(255)
  bio         String?  @db.Text
  cidade      String?  @db.VarChar(100)
  data_nascimento DateTime?
  ativo       Boolean  @default(true)
  criado_em   DateTime @default(now())
  
  // Estatísticas calculadas
  total_torneios   Int @default(0)  // Total de torneios participados
  total_pontos     Int @default(0)  // Total de pontos acumulados
  melhor_posicao   Int?             // Melhor posição já alcançada
  vitorias         Int @default(0)  // Número de vitórias (1º lugar)
  
  // Relacionamentos
  participacoes Participacao[]
  rankings    Ranking[]
  fotos       Foto[]    // Fotos do hall da fama (campeões)

  @@map("jogadores")
}

model Torneio {
  id            Int      @id @default(autoincrement())
  id_temporada  Int
  nome          String   @db.VarChar(100)
  data_hora     DateTime
  local         String   @db.VarChar(200)
  observacoes   String?  @db.Text
  ativo         Boolean  @default(true)
  
  // Relacionamentos
  temporada     Temporada @relation(fields: [id_temporada], references: [id], onDelete: Cascade)
  participacoes Participacao[]
  fotos         Foto[]

  @@map("torneios")
}

// Nova tabela para registrar pontuações por torneio
model Participacao {
  id           Int      @id @default(autoincrement())
  id_torneio   Int
  id_jogador   Int
  posicao      Int      // Posição final no torneio (1º, 2º, 3º, etc.)
  pontuacao    Int      // Pontos ganhos neste torneio
  criado_em    DateTime @default(now())
  
  // Relacionamentos
  torneio      Torneio  @relation(fields: [id_torneio], references: [id], onDelete: Cascade)
  jogador      Jogador  @relation(fields: [id_jogador], references: [id], onDelete: Cascade)

  // Índice único para evitar duplicatas (um jogador por torneio)
  @@unique([id_torneio, id_jogador])
  @@map("participacoes")
}

model Ranking {
  id            Int      @id @default(autoincrement())
  posicao       Int
  pontuacao     Int      // Soma total de pontos na temporada
  atualizado_em DateTime @default(now())
  id_jogador    Int
  id_temporada  Int
  
  // Relacionamentos
  jogador       Jogador   @relation(fields: [id_jogador], references: [id], onDelete: Cascade)
  temporada     Temporada @relation(fields: [id_temporada], references: [id], onDelete: Cascade)

  // Índice único para evitar duplicatas
  @@unique([id_jogador, id_temporada])
  @@map("ranking")
}

enum CategoriaFoto {
  TEMPORADA
  HALL_DA_FAMA
  MELHORES_MOMENTOS
}

model Foto {
  id           Int      @id @default(autoincrement())
  id_torneio   Int?     // Agora opcional para fotos não vinculadas a torneios
  id_temporada Int?     // Para fotos de temporada sem torneio específico
  id_jogador   Int?     // Para fotos do hall da fama (campeões)
  imagem_url   String   @db.VarChar(255)
  legenda      String?  @db.VarChar(255)
  data         DateTime @default(now())
  album        String   @db.VarChar(100)
  categoria    CategoriaFoto @default(TEMPORADA)
  
  // Relacionamentos
  torneio      Torneio?  @relation(fields: [id_torneio], references: [id], onDelete: Cascade)
  temporada    Temporada? @relation(fields: [id_temporada], references: [id], onDelete: Cascade)
  jogador      Jogador?  @relation(fields: [id_jogador], references: [id], onDelete: Cascade)

  @@map("fotos")
}
