services:
  frontend:
    build: ./frontend
    environment:
      - ${NEXT_PUBLIC_API_URL}
    ports:
      - "3000:3002"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # evita conflito de node_modules da m√°quina com o container
    command: npm run dev
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "3001:3001"
      - "5555:5555"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev
    environment:
      DATABASE_URL: mysql://root:root@db:3306/aces_poker
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: false
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

volumes:
  mysql_data: